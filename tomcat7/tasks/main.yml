---
- name: download Tomcat
  local_action: >
    get_url
      url="http://ftp.unicamp.br/pub/apache/tomcat/tomcat-7/v{{tomcat_version}}/bin/{{tomcat_package}}"
      dest="{{download_dir}}/{{tomcat_package}}"

- name: ensures {{tomcat_dir}} exists
  file:
    path="{{tomcat_dir}}"
    state=directory

- name: "checks if {{tomcat_dir}}/{{tomcat_dist}}/bin/startup.sh exists"
  command:
    chdir="{{tomcat_dir}}"
    ls "{{tomcat_dist}}/bin/startup.sh"
  register: tomcat_exists
  ignore_errors: true

- name: "DEBUG - prints {{tomcat_exists}} value"
  command:
    echo  "{{tomcat_exists.stdout}} {{tomcat_exists.stdout.find('startup')}}"
  tags: debug

- name: unpack Tomcat
  unarchive:
    src="{{download_dir}}/{{tomcat_package}}"
    dest="{{tomcat_dir}}"
    creates="{{tomcat_dir}}/{{tomcat_dist}}/bin/startup.sh"
  when: "tomcat_exists.stdout.find('startup') != 0"
  tags: unpack

- name: ensures Tomcat context config folder exists
  file:
    path="{{tomcat_dir}}/{{tomcat_dist}}/conf/Catalina/localhost"
    state=directory

- name: configures server.xml
  template:
    src=server.xml.j2
    dest="{{tomcat_dir}}/{{tomcat_dist}}/conf/server.xml"

- name: configures tomcat-users.xml
  template:
    src="tomcat-users.xml.j2"
    dest="{{tomcat_dir}}/{{tomcat_dist}}/conf/tomcat-users.xml"

- name: configures logging.properties
  template:
    src="logging.properties.j2"
    dest="{{tomcat_dir}}/{{tomcat_dist}}/conf/logging.properties"

- name: creates tomcat.sh
  template:
    src="tomcat.sh.j2"
    dest="{{tomcat_dir}}/{{tomcat_dist}}/tomcat.sh"
    mode=0700
  notify:
    - restart tomcat

- name: configures the setenv.sh script
  template:
    src=setenv.sh.j2
    dest="{{tomcat_dir}}/{{tomcat_dist}}/bin/setenv.sh"
    mode=0755
  notify:
  - restart tomcat

#- include: multiInstances.yml
#  when: tomcat.instances is defined

#- include: singleInstance.yml
#  when: tomcat.instances is not defined